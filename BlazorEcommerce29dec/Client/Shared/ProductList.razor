@* @inject HttpClient Http *@
@inject IProductService ProductService;


@* @if (ProductService.products == null || ProductService.products.Count == 0) *@
@if (ProductService.products?.Count == 0)
{
    <span>LOADING PRODUCTS ...</span>
}
else
{
    <ul class="list-unstyled">
        @foreach (var product in ProductService.products)
        {
            <li class="media my-3">
                <div class="media-img-wrapper mr-2">
                    <a href="/product/@product.Id">
                        <img class="media-img" src="@product.ImageUrl" alt="@product.Title" />
                    </a>
                </div>
                <div class="media-body">
                    <a href="/product/@product.Id">
                        <h4 class="mb-0">@product.Title</h4>

                    </a>
                    <p>@product.Description</p>
                    <h5 class="price">
                        $@product.Price
                    </h5>
                </div>
            </li>
        }


    </ul>
}

@code {
    // private static List<Product> Products = new List<Product>();

    protected override async Task OnInitializedAsync()
    {
        // var result =
        // await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("api/product");
        await ProductService.GetProducts();
        //     if (result != null && result.Data != null)
        // {
        //     Products = result.Data;
        // }
    }

}
